* Installation
   The best way to install fw is the rust tool cargo.
   #+BEGIN_SRC bash
   cargo install fw
   #+END_SRC

   If you are using `OSX` [[https://rustup.rs/][rustup]] is recommended but you [[https://github.com/Homebrew/homebrew-core/pull/14490][should be able to use brew too]].

   If you need a deb or rpm package have a look at [[https://github.com/brocode/fw/releases][fw releases]]
   
   If you're lucky enought to be an arch linux user: [[https://aur.archlinux.org/packages/fw/][AUR]]

** With fzf
   Another thing that will make you much more productive is to use the ~zsh~ completions (if you're not using the ~zsh~ I guess
   you would get a bigger productivity boost by switching to ~zsh~ first).

   Since we integrate with [[https://github.com/junegunn/fzf][fzf]] it is recommended to use that for the best possible experience (~workon~ and ~nworkon~ will be helm-style fuzzy finders).
   Make sure ~fzf~ is installed and then add this to your ~zsh~ configuration:

   #+BEGIN_SRC shell-script
   if [[ -x "$(command -v fw)" ]];
   then
     if [[ -x "$(command -v fzf)" ]];
     then
       eval $(fw print-zsh-setup -f 2>/dev/null);
     else
       eval $(fw print-zsh-setup 2>/dev/null);
     fi;
   fi;
   #+END_SRC

** Without fzf
   If you don't want ~fzf~ integration:

   #+BEGIN_SRC shell-script
   if [[ -x "$(command -v fw)" ]];
   then
     eval $(fw print-zsh-setup 2>/dev/null);
   fi;
   #+END_SRC

   In this case ~workon~ and ~nworkon~ will require an argument (the project) and will provide simple prefix-based autocompletion.
   You should really use the ~fzf~ integration instead it's much better!
